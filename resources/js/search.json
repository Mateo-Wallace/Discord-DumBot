[[{"l":"Welcome to the DumDocs","p":["Contributors Forks Shield Stars Shield Issues License Shield LinkedIn Shield"]},{"l":"About The Project","p":["Have you ever wanted a bot that you had full control over? No worrying about the bot shutting down and having to search for a new one? That's exactly the niche that DumBot is trying to fill! The goal of DumBot is instead of adding a random bot to your server you can host the bot yourself and add it to whatever servers you would like! With basic JavaScript knowledge you can also add your own commands and turn on and off existing commands.","Main Features:","Dice Roller","Music Player","This README will run you through how to download, edit, deploy, and use this code to create a bot of your own. For those of you that do not wish to host the bot yourself you can also simply use my deployed version."]},{"l":"Built With","p":["JavaScript Shield NPM Shield discord.js Shield discord-player Shield FFmpeg Shield Node.js Shield Heroku Shield Markdown Shield VS Code Shield"]}],[{"l":"Add DumBot To Your Server","p":["The existing instance of DumBot does not allow for any customization as all of that is housed within the code. DumBot out of the box comes with all dice rolling and music playing commands. He does not recognize DJ rolls for ease of use.","Note","To fully customize DumBot see Hosting Your Instance of DumBot","Click here to add DumBot to your server","Once DumBot has been added to your server, try using /help in order to see a brief list of usable commands. Full explanations for each command are also detailed on tbd"]}],[{"l":"Hosting Your Instance of DumBot","p":["This document will set you up to have your own version of DumBot that you can fully customize the code of. This documentation will go super in depth so even if you have no coding knowledge you should be able to figure it out. Feel free to open a discussion if you are having problems.","Note","Be aware before going through this process my solution to deploying is hosting on Heroku which is a PAID service. I researched into free solutions like Glitch but was unable to make it work. Heroku costs $5 for the lowest tier plan. That plan will put DumBot into sleep mode after 30 minutes. For $7 you can bump up your plan and have DumBot running at all times.","If you find a way to run DumBot for free, even if it goes into sleep mode, that information would be amazing! Feel free to message me or open a discussion and I will add you as a contributor to the project."]},{"l":"Setting Up A Discord Bot","p":["applications.commands","At the bottom of the screen you should see a link with a copy button to the right of it. This is circled in red in the above image. Copy your link and save it somewhere where you can remember. Once we are done this is the link you will use and share with your friends to add your bot to a server.","Attach Files","Below is an example of what the screen should look like after selecting all of these options:","bot","Bot Permissions","Congratulations! You've just added a bot to your server. No code is connected to your bot yet so it wont do anything but the first step is now complete. Time to add some code.","Connect","creating a new bot","dev portal applications tab","Embed Links","example of turned on commands to make the url","example of what creating the bot looks like","From here scroll down a bit until you find the Privileged Gateway Intents section. Turn on the priveleges called Server Members Intent and Message Content Intent, then save your changes:","From that screen in the top right corner you should see a button called New Application. It's circled in red on the image above. Click that button and fill out the Name of your bot and agree to their terms of service. Then hit the Create button:","From this screen you can add the actual Profile Photo that will show up in discord for your bot, and you can change the Username of the bot that will show up in discord.","General Permissions","Go to the Discord Dev Portal Applications Tab and sign in if you aren't already. It should look something like this:","Note","Now go to that link. You will be brought to your typical page to add a bot to a server. Select which server you would like to add your bot to, authorize the permissions, and prove your a human.","Now we will move on to actually adding your bot to a discord server. On the tabs at the left click on OAuth2 just above the Bot tab and select URL Generator. From here we will be turning on various permissions for the bot. Here they are in order:","Now you will be presented with a screen where you can customize the bot, the General Information Tab. Feel free to play around with settings such as App Icon, Description, and Tags. Nothing on this page is vital to our purposes.","On the left hand side of the screen you will see tabs, click on the one that says Bot and click it. You will see a button on this screen that says Add Bot under the Build-A-Bot section, click it. You will be presented with a screen that looks like this:","Read Messages/View Channels","Scopes","Send Messages","Setting up a Discord Bot is extremely well detailed through the Official Discord Developer Portal Documentation. Feel free to follow along both here and on those docs in order to accomplish setting up your bot.","showing how to add bot to server through link","shows what the turned on priveleges look like.","Speak","Text Permissions","Voice Permissions","Where it says TOKEN copy this token and save it for later. DO NOT show anyone your token. This is almost like a password that protects your bot and makes sure only you can edit and manage it. We will use this when we Deploy Through Heroku."]},{"l":"Forking The Repo","p":["Forking the Repo. If you don't know what that means essentially its copying my code to make your own editable version. For more information on this see the GitHub Docs. To do this you will need to have a GitHub account.","At the top of the home page of this Repository you should see a tab called Fork:","example of image of fork tab","Once you've clicked on that tab you will be presented with the Create a new fork page.","example of create a new fork","Customize the title and description to your liking and then click Create Fork.","Congratulations! You have successfully copied your own version of the code. Time to customize it to your liking."]},{"l":"Customizing The Code","p":["Now that you have forked the repo you will be presented with your instance of the code. In order to customize your bot we need to open config.js. The below image shows you where that can be located from the home screen:","example of forked repo with config.js circled","Once you have clicked on config.js you will be presented with a large screen of code. At the top of that code you will see some buttons that say Raw, Blame, and a Pen Emoji. Select the Pen Emoji in order to edit your code:","config file with a pen image circled","Perfect! Now you are editing the file. This section will now break up into variations of what to do."]},{"l":"The Bare Minimum Requirements","p":["If you just want to use DumBot as is but own your own instance of him your in luck! All you have to do is change a 0 to a 1 and your code editing is complete.","Somewhere between line 1 - 8 you should see the word global. In the image below it is on line 4 but further editing might have this change. Currently line 4 should looks like global: 0,| we want to replace that with global: 1, . Be aware that there is a comma. That comma is important to keep! Reference the image below to see what it should look like:","global variable changing from 0 to 1","Now scroll all the way down to the bottom of the file and select Commit changes:","config file showing the commit changes button","That all that we need to do as far as editing files on GitHub. Good job!"]},{"l":"Playing With The Config File","p":["This is the real reason to start your own instance of DumBot. This section will describe all of the customization functionality within config.js. In order to edit config.js see the instructions listed above in The Bare Minimum Requirements.","The config file is split into different sections, they are app, opt, text, and enabledCommands.","The app section allows you to edit certain things about your bot. For example customizing the botName to your version of the bot.","The opt section allows you to customize the music portion of the bot. You can turn on a mode where if a user has the DJ role, only those users can use music commands in your server.","The text section allows you to change certain text within the bot. For example you can fully customize the text that shows up on the /help command.","There is even a way to create your own custom command! Simply adjust simpleCustomCommandName to what you would like your command to be, and adjust simpleCustomCommandMessage to the message you would like to be played when a user types your command. To enable this command, look within the enabledCommands section for custom and switch it from 0 to 1.","The enabledCommands section allows you to turn on and off every single command. So if you don't want a dice roller for example, you can turn those commands off.","There are various comments within the code to help guide you as well. If you are having trouble feel free to either message me or open a new discussion."]},{"i":"advanced-development-new-commands","l":"Advanced Development (New Commands)","p":["IN DEVELOPMENT","CHANGE ENV.SAMPLE TO ENV AND ADD TOKEN VARIABLE AND GUILD VARIABLE, SUGGEST VS CODE, SUGGEST MAKING A DISCORD SERVER FOR PLAYING WITH THE BOT, MAKE THEM INSTALL NODE, POINT TO COMMANDS/CUSTOM AND EVENTS FOLDERS"]},{"l":"Deploy Through Heroku","p":["Now that you have customized the code to your liking and set the global variable from 0 to 1 it's time to deploy your bot. We will be using Heroku to deploy your app. Heroku is a payed service that hosts websites and other coding projects. If you don't have an account, set one up and log in. Once logged in you will be presented with a screen like this one:","example of new project button on heroku dashboard","Select the New button. You will be prompted to add an App name, make it the something simple like your bot name and then select Create app.","You will now be presented with the dashboard for your App. If you aren't already loaded onto the Deploy tab then go there. Where it says Deployment Method select GitHub. Where it says Connect to GitHub you will see a search field that says Search for a repository to connect to. Find your repo and then click the Connect button. Below is an example of this:","example heroku deployment from github","After selecting connect a field called Automatic Deploys will show up. Select the branch you would like to deploy from. Yours should only have the branch main. My example will be using the feature/example branch. Select Enable Automatic Deploys. This will make it so anytime you edit the code on your main branch your bot will automatically update. Now a little further below there is a field called Manual deploy, select Deploy Branch and this will run your code.","example heroku auto deploy and deploy branch","Give heroku a minute to finish running your code. Once it is complete we will be moving to the Resources tab. You will see an Eco Dynos section with two commands. We want to disable web npm start and enable worker node index.js. If you don't see something similar to the image below refresh your screen a few times:","heroku changing web to worker","Now go back to the settings tab and scroll down till you see Config Vars and Reveal Config Vars. We need to add two variables. A TOKEN and GUILD variable. Both in all caps. The TOKEN is the one we copied and saved somewhere safe back in the section Setting Up A Discord Bot. The GUILD variable is unimportant for deployment, just write dumbotisdumb because the code will break if nothing is assigned to that variable.","heroku config variables","Now go back to the Deploy tab at the top of the dashboard and scroll all the way down to Manual Deploy. Select Deploy Branch one last time and our bot should be good to go! Give it a few minutes and then test your bot in discord. It should look something like this:","working example bot","Congratulations! Have fun creating and don't forget to Star the repo!"]}],[{"l":"Commands","p":["This file assumes you have already added a version of DumBot to your discord server. In order to accomplish that if you haven't already please reference either of these files before continuing:","Add DumBot To Your Server","Hosting Your Instance of DumBot","Rather than scrolling through this page searching for a specific command I reccomend using the search bar at the top right of the screen if you are viewing this on the DumDocs website."]},{"l":"Music Commands"},{"l":"back","p":["/back goes to the previous song played in your instance of DumBot. If DumBot was disconnected from chat this song will be lost. Be aware it will not go to the previous songs that were in queue but literally the LAST song played. So hitting back twice will return you to the song currently being played, not the song played 2 songs ago."]},{"l":"clear","p":["/clear removes all songs from the queue. Meaning no song will play next and any songs you had set up to play next will be deleted."]},{"l":"controller","p":["/controller allows the user to select a text channel for a music controller to show up in. This controller allows the user to use many of the existing commands in button format. Here is an example of what the controller looks like:","example of the music controller showing back, queue, resume & pause, now playing, skip, volume down, loop, save, and volume up"]},{"l":"filter","p":["/filter allows the user to add an audio filter to the music being played. The options are as follows:","bassboost_low| bassboost | bassboost_high | 8D | vaporwave | nightcore | phaser | tremolo | vibrato | reverse | treble | normalizer2 | normalizer | surrounding | pulsator | subboost | karaoke | flanger | gate | haas | mcompand | mono | mstlr | mstrr | compressor"]},{"l":"jump","p":["/jump allows the user to jump to a specific song in queue. It allows for 2 types of input. Either the song or number input. It's reccomended you use number as it is more accuracte.","number allows you to type the position of the song you'd like to jump to in queue. You kind find out it's position in queue by using the /queue command.","song allows you to type in the name of the song you'd like to skip to. It must match the name you see in queue exactly or else it will not work."]},{"l":"loop","p":["/loop allows the user to repeat songs. This has 3 itterations.","Song allows the user to loop the current song","Queue allows the user to loop all songs in Queue","Disable allows the user to stop the loop function"]},{"l":"nowplaying","p":["/nowplaying displays the currently playing song along with some extra information. It is formatted as follows:","example of what the nowplaying command looks like"]},{"l":"pause","p":["/pause pauses the current track. It remembers at what point in the song it paused. When you type the command /resume it will continue from the point in time that you pressed /pause."]},{"l":"play","p":["/play allows the user to play a song based on either search input, a link, or a playlist link. It can work from various sites so try a few different links from various music sites to see if they work."]},{"l":"playnext","p":["/playnext works the same as /play except it does not accept a playlist link. It adds the song you type in to be added to the next position in queue."]},{"l":"queue","p":["/queue shows you all songs that will be played next.","an example of what the queue command looks like"]},{"l":"remove","p":["/remove allows the user to remove a song from queue. You can either type the number of the song in queue or the name of the song. It's recommended to type the number as it is more accurate. To find out the number in queue simply type /queue"]},{"l":"resume","p":["/resume works hand in hand with the /pause command. If the song has been paused, then using the resume command begins the song at the point at which the song was stopped."]},{"l":"save","p":["/save sends a direct message to the user that used the save command. That message contains information about the currently playing song for the user to reference later."]},{"l":"search","p":["/search allows the user to type a description of the song theyd wish to play such as an artist or the song title. DumBot will respond with 10 options for you to choose from. Answer relatively quickly as DumBot will time out.","Type your song choice in chat without any commands and the song will be added to queue.","example of dumbot search command"]},{"l":"seek","p":["/seek moves the user to a specific time in the song. This is calculated in milliseconds.","So if the user types /seek 1000 that would place the song at 1 second. If the user types /seek 10000 that would place the song at 10 seconds."]},{"l":"shuffle","p":["/shuffle will randomize the current queue of songs. To see how the songs have been shuffled simply type /queue"]},{"l":"skip","p":["/skip will end the current song and begin the next song in queue."]},{"l":"stop","p":["/stop will end the current song, clear the queue, and disconnect DumBot from voice."]},{"l":"volume","p":["/volume allows the user to set the volume. DumBot will typically play at 75% volume. You can change DumBot's volume from anywhere between 1-100%."]},{"l":"Core Commands"},{"l":"dumbot","p":["/dumbot displays a simple message when called. He essentially says Hello I am DumBot. I am very dumb. It will then edit that message 4 times with new information before finally stopping on the original message.","DumBot began as a simple project where I wanted to see if I could add a bot to a server and have it respond with the most simple command possible. It has since turned into a new beast to where DumBot isn't so dumb anymore!"]},{"l":"help","p":["/help displays a hidden message that shows all possible commands in a list. It also links back to this repo and this page for full descriptions of what each command does."]},{"l":"ping","p":["/ping displays the latency, or ping, of DumBot and his responses."]},{"l":"hroll","p":["/hroll is the exact same as /roll but it is a hidden message. This means that only the user who used the command can see the outcome. Perfect for a Dungeon Master or someone who is running a game."]},{"l":"roll","p":["/roll allows the user to input a string of numbers and dice in order to randomly calculate a total.","The bot will then display the users Input, the Result of each dice rolled, the Total of all dice and numbers using relevant math, and the Crit Total which displays the value of all dice rolled times 2 plus all relevant math.","Valid inputs are as follows:","No input rolls a 20 sided die","1d20, d20, or some variation. The number before the d determines how many dice are to be rolled. The number after the d determines how many sides the dice would have. Ex. 5d10 would roll 5 dice of 10 sides. So therefore 1d20 rolls 1 die of 20 sides","Math such as +, -, *, or /. The star * represents multiplication.","Integer such as any whole number (Ex. 5)","Here a few example inputs:","/roll","/roll 1d20 + 1","/roll 5 - d6 +4D10*2d2","This is what the output should look like:","example output for rolling 2d6 + 5 + 1d4"]}],[{"l":"Contact","p":["Mateo Wallace","GitHub - github.com/Mateo-Wallace","Email - mateo.t.wallace@gmail.com","LinkedIn - linkedin.com/in/mateo-wallace/","Portfolio - mateo-wallace.github.io/"]}],[{"l":"Contributing","p":["Contributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.","If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\". Don't forget to give the project a star! Thanks again!","Fork the Project","Create your Feature Branch ( git checkout -b feature/AmazingFeature)","Commit your Changes ( git commit -m 'Add some AmazingFeature')","Push to the Branch ( git push origin feature/AmazingFeature)","Open a Pull Request","If all of this is new to you take a look at the GitHub Docs."]}],[{"l":"Acknowledgments","p":["I am appreciative for the source code, ideas, and inspiration that all of these repos and creators have provided to this project. If you see anything within my code that you recognize as yours and don't see yourself listed here please feel free to open an issue and I will add you!","ZerioDev - Music-bot","retypeapp - retype","othneildrew - Best-README-Template"]}],[{"l":"License","p":["Distributed under the MIT License. See LICENSE for more information."]}],[{"l":"This is a test","p":["test","Note","It is possible that the first 2 or 3 times you try to call DumBot it will say \" The application did not respond\" like this:","dumbot application did not respond","This is happening because without paying a subscription for DumBot to be up at all times he will go into sleep mode. After 2 or 3 tries this will resolve itself for about 30 minutes of use.","If you would like to stop this from happening I recommend you Deploy Your Own Instance of DumBot and pay for his server to be up at all times. It will typically cost about $5 - $8."]}]]